16:18 +0800 <sdnds-slackbot>: <chchen>: 想到一個，私架AP的目的，很多是為了行動裝置，而行動裝置不管 iOS/Android 會有些特殊的連線，針對這些特殊的連線來做判斷可能的私接AP行為
16:19 +0800 <sdnds-slackbot>: <john-lin>: iOS/Android 會有些特殊的連線 <<< 例如什麼的特殊連線？
16:21 +0800 <sdnds-slackbot>: <chchen>: 要找一下，我忘記了... 有特定 Port
16:23 +0800 <sdnds-slackbot>: <chchen>: Google Play 用 Port 5228
16:23 +0800 <sdnds-slackbot>: <chchen>: 類似這種
16:25 +0800 <sdnds-slackbot>: <john-lin>: <https://support.apple.com/en-is/HT202944>
16:25 +0800 <sdnds-slackbot>: <john-lin>: 感覺有機會
16:27 +0800 <sdnds-slackbot>: <chchen>: 對，iOS 好像會有 5223
16:31 +0800 <sdnds-slackbot>: <chchen>: 或者分析 HTTP Header，如果是行動裝置應該有特別的 field 內容
16:32 +0800 <sdnds-slackbot>: <john-lin>: 分析 HTTP Header 要給controller overhead可能會太高
16:32 +0800 <sdnds-slackbot>: <john-lin>: buffer 完整的 http session 的封包後還原
16:32 +0800 <sdnds-slackbot>: <chchen>: 不一定給 controller
16:33 +0800 <sdnds-slackbot>: <chchen>: tap 送到別的地方
16:33 +0800 <sdnds-slackbot>: <john-lin>: IPS IDS?
16:34 +0800 <sdnds-slackbot>: <chchen>: 或者用抽樣的
16:35 +0800 <sdnds-slackbot>: <john-lin>: 類似 sFlow
16:35 +0800 <sdnds-slackbot>: <chchen>: 不用一次全部送上去
16:35 +0800 <sdnds-slackbot>: <john-lin>: 不過這樣感覺已經在做入侵偵測了
16:35 +0800 <sdnds-slackbot>: <chchen>: 例如有100個登記的IP，我每5分鐘只把其中10個IP Port 80的資料送上來分析
16:35 +0800 <sdnds-slackbot>: <chchen>: 其他都放過
16:36 +0800 <sdnds-slackbot>: <chchen>: 反正輪幾天總是會輪到的
16:36 +0800 <sdnds-slackbot>: <chchen>: 這邊有人用 sFlow 嗎？
16:37 +0800 <sdnds-slackbot>: <chchen>: 不知道設備支援程度如何
16:37 +0800 <sdnds-slackbot>: <john-lin>: 沒用過..
16:37 +0800 <sdnds-slackbot>: <john-lin>: 如果今天是加密封包也束手無策
16:37 +0800 <sdnds-slackbot>: <chchen>: 我摸過的設備頂多支援counter
16:38 +0800 <sdnds-slackbot>: <chchen>: 多種方法多層次的判斷吧，若真的所有封包都加密那也沒辦法
16:38 +0800 <sdnds-slackbot>: <john-lin>: 恩
16:40 +0800 <sdnds-slackbot>: <john-lin>: 有人在用SDN 做 load balance 嗎
16:44 +0800 <sdnds-slackbot>: <chchen>: 哪一個層次的 load balance
16:45 +0800 <sdnds-slackbot>: <john-lin>: Session aware load balancing
16:47 +0800 <sdnds-slackbot>: <chchen>: 聽起來好難喔
16:47 +0800 <sdnds-slackbot>: <chchen>: 至少要有個 db 記錄 session
16:47 +0800 <sdnds-slackbot>: <john-lin>: 用SDN做 ？
16:47 +0800 <sdnds-slackbot>: <john-lin>: 應該比較容易一些
16:48 +0800 <sdnds-slackbot>: <john-lin>: 只是不知道傳統網路有沒有能做倒Session aware 的LB設備
16:49 +0800 <sdnds-slackbot>: <chchen>: <http://docs.fortinet.com/uploaded/files/2039/forticontroller-session-aware-load-balancing-50.pdf>
16:49 +0800 <sdnds-tw_Bot>: URL: http://phdta.info/Wrk3p  ==> Fortinet Docs Library - Documents, Cookbooks and Quick Start Guides
16:49 +0800 <sdnds-slackbot>: <chchen>: 隨便 google
16:50 +0800 <sdnds-slackbot>: <john-lin>: 恩 看起來應該不便宜
16:51 +0800 <sdnds-slackbot>: <john-lin>: 不需要存session 可以做
16:52 +0800 <sdnds-slackbot>: <john-lin>: 新的session 的第一個封包上controller 就把entry寫好
16:55 +0800 <sdnds-slackbot>: <chchen>: 好像是耶
16:55 +0800 <sdnds-slackbot>: <john-lin>: 不難做啊 事實上我正在做XD
16:56 +0800 <sdnds-slackbot>: <john-lin>: 只是不知道有沒有價值?
17:08 +0800 <sdnds-slackbot>: <chchen>: 參考 fortinet 的說帖囉
17:10 +0800 <sdnds-slackbot>: <john-lin>: 覺得SDN Switch 的port可以不用出道24 48那麼多
17:11 +0800 <sdnds-slackbot>: <john-lin>: 出個4~5 port 做LB的app開發也不錯
17:12 +0800 <sdnds-slackbot>: <john-lin>: 當然最好每個port 還是要上Gbps XD
17:28 +0800 <sdnds-slackbot>: <powen_tsai>: 這是難的地方
17:28 +0800 <sdnds-slackbot>: <powen_tsai>: ha
17:28 +0800 <sdnds-slackbot>: <john-lin>: 哪個地方比較難？
17:31 +0800 <sdnds-slackbot>: <jalen>: sflow有人做detect NAT阿
17:31 +0800 <sdnds-slackbot>: <jalen>: 只是一直沒有去測試過XD
17:31 +0800 <sdnds-slackbot>: <jalen>: <http://www.sflow.org/detectNAT/>
17:32 +0800 <sdnds-slackbot>: <jalen>: 用這個理論上是可以偵測到下面有DHCP的AP
17:33 +0800 <sdnds-slackbot>: <john-lin>: 看來不需要SDN可以做到啊
17:34 +0800 <sdnds-slackbot>: <chchen>: 感覺是大砲打小鳥... ha
17:37 +0800 <sdnds-slackbot>: <chchen>: conclusion 看一下
17:38 +0800 <sdnds-slackbot>: <chchen>: 感覺大部分NAT都會偵測不到
17:39 +0800 <sdnds-slackbot>: <powen_tsai>: 目前SDN Switch用的ASIC，都是24/48
17:39 +0800 <sdnds-slackbot>: <powen_tsai>: low port count用的晶片，等級比較低，要用來做SDN switch用，幾乎是不合成本
17:40 +0800 <sdnds-slackbot>: <powen_tsai>: 這是就硬體系統廠角度來看
17:40 +0800 <sdnds-slackbot>: <john-lin>: 恩但是今天如果不用ASIC 用NPU?
17:40 +0800 <sdnds-slackbot>: <powen_tsai>: 不合成本的原因，主要是因為量太小
17:40 +0800 <sdnds-slackbot>: <john-lin>: 是不是成本可以降低
17:40 +0800 <sdnds-slackbot>: <powen_tsai>: NPU1u3
17:40 +0800 <sdnds-slackbot>: <john-lin>: 犧牲一些效能
17:40 +0800 <sdnds-slackbot>: <john-lin>: 是喔
17:41 +0800 <sdnds-slackbot>: <powen_tsai>: NPU比起ASIC, 只有差在switching capacity不夠大
17:41 +0800 <sdnds-slackbot>: <powen_tsai>: yeah
17:41 +0800 <sdnds-slackbot>: <powen_tsai>: NPU我們有想弄
17:41 +0800 <sdnds-slackbot>: <powen_tsai>: 例如EZChip
17:41 +0800 <sdnds-slackbot>: <powen_tsai>: 但太貴，而且也沒軟體partner
17:41 +0800 <sdnds-slackbot>: <john-lin>: 軟體partner 指的是？
17:42 +0800 <sdnds-slackbot>: <john-lin>: 沒有人幫你們implement Openflow protocol?
17:42 +0800 <sdnds-slackbot>: <powen_tsai>: NPU有支援OpenFlow了
17:42 +0800 <sdnds-slackbot>: <powen_tsai>: 沒人去做OS
17:42 +0800 <sdnds-slackbot>: <powen_tsai>: 我們需要軟體partner去做OS
17:42 +0800 <sdnds-slackbot>: <john-lin>: 現成的OS沒辦法套嗎
17:43 +0800 <sdnds-slackbot>: <john-lin>: linux
17:52 +0800 <sdnds-slackbot>: <chchen>: 之前有聽 IgnitNet 有用 openflow 的解決方案
17:55 +0800 <sdnds-slackbot>: <chchen>: 那些 AP 應該就少少的 port 數吧
17:55 +0800 <sdnds-slackbot>: <powen_tsai>: IgniteNet
17:55 +0800 <sdnds-slackbot>: <powen_tsai>: 噢
17:55 +0800 <sdnds-slackbot>: <powen_tsai>: chchen你知道IngniteNet ?/
17:56 +0800 <sdnds-slackbot>: <chchen>: 有聽過介紹
17:56 +0800 <sdnds-slackbot>: <powen_tsai>: 可以知道是誰介紹的嗎？
17:56 +0800 <sdnds-slackbot>: <powen_tsai>: interesting
17:56 +0800 <sdnds-slackbot>: <powen_tsai>: IgniteNet, 應該是我們去推廣的
17:57 +0800 <sdnds-slackbot>: <powen_tsai>: IgniteNet是智邦的solution
17:57 +0800 <sdnds-slackbot>: <powen_tsai>: 但依我的瞭解，應該不是用OpenFlow去實作？
17:57 +0800 <sdnds-slackbot>: <chchen>: 我沒有很注意聽... 不知道是誰耶
17:58 +0800 <sdnds-slackbot>: <chchen>: 我只記得有說也提供 SDN 的方案，有人提問說是 openflow 嗎？回答說是
17:59 +0800 <sdnds-slackbot>: <chchen>: 我脫離 SDN 很久了，突然聽到 keyword 才專心一下
17:59 +0800 <sdnds-slackbot>: <powen_tsai>: I see
17:59 +0800 <sdnds-slackbot>: <powen_tsai>: thanks
17:59 +0800 <sdnds-slackbot>: <powen_tsai>: 真有意思
18:00 +0800 <sdnds-slackbot>: <powen_tsai>: AP的確是少少的port數，實作OpenFlow，然後要有好的performance, not easy
